name: CI/CD Deployment Pipeline

# When to run this workflow
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

# Prevent multiple deployments from running at the same time
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Continuous Integration (Test and Lint)
  ci:
    name: "CI - Run Tests and Linting"
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Get the code from GitHub
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install

    # Step 4: Run linter
    - name: Run Linter
      run: npm run lint

    # Step 5: Run tests
    - name: Run Tests
      run: npm test

    # Step 6: Upload artifact for deployment jobs
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          *
          !node_modules/
        if-no-files-found: error

  # Job 2: Deploy to QA Environment
  deploy_qa:
    name: "Deploy to QA Environment"
    runs-on: ubuntu-latest
    needs: ci  # This job depends on CI job completing successfully
    # Only run when code is pushed to dev branch
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'

    steps:
    # Step 1: Download the artifact from CI job
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: build-output

    # Step 2: Show what files we have for deployment
    - name: List files for QA deployment
      run: |
        echo "üìÅ Files ready for QA deployment:"
        ls -la
        echo "üöÄ Simulating deployment to QA environment..."
        echo "‚úÖ QA Deployment completed successfully!"

  # Job 3: Deploy to Production Environment
  deploy_prod:
    name: "Deploy to Production Environment"
    runs-on: ubuntu-latest
    needs: ci  # This job depends on CI job completing successfully
    # Only run when code is pushed to main branch
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    # Step 1: Download the artifact from CI job
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: build-output

    # Step 2: Show what files we have for deployment
    - name: List files for Production deployment
      run: |
        echo "üìÅ Files ready for PRODUCTION deployment:"
        ls -la
        echo "üéâ DEPLOYING TO PRODUCTION! This is the live site!"
        echo "‚úÖ Production Deployment completed successfully!"

    # Step 3: Send notification (Extra Challenge)
    - name: Send deployment notification
      if: success()
      run: |
        echo "üì¢ Notification: Production deployment was successful!"
        echo "Time: $(date)"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
